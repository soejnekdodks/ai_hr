services:

  bot:
    container_name: bot
    build: 
      context: ./
    restart: always
    env_file: ".env"
    depends_on:
      - postgres
      - mongo
      - redis
      - rabbitmq

    networks:
      - net

  postgres:
    container_name: postgres
    image: postgres:latest
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${PG_NAME}
      POSTGRES_USER: ${PG_LOGIN}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
    volumes:
      - pg_data:/var/lib/postgresql/data

  mongo:
    container_name: mongo
    image: mongo:latest
    restart: always
    ports: 
      - 8081:8081
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD} 
    volumes:
      - mongo_data:/data/db
    ports:
      - "27017:27017"

  redis:
    container_name: redis
    image: redis:latest
    restart: always
    ports: 
      - 8081:8081
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    ports:
      - "6379:6379"

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:latest
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    ports:
      - "5672:5672"

  webserver:
    image: nginx:latest
    ports:
      - 80:80
    restart: always
    volumes:
      - ./tokens:/tokens
      - ./nginx/conf/:/etc/nginx/conf.d/
    depends_on:
      - bot
    networks:
      - net

volumes:
  pg_data:
    name: pg_data
  mongo_data:
    name: mongo_data
  rabbitmq_data:
    name: rabbitmq_data

networks:
  net:

